#!/usr/local/bin/python3

__author__ = 'Paolo'


from tkinter import *


window = Tk()
canvas = Canvas(window, width=1400, height=820, bg="#666666")
canvas.pack()
board = {}


def print_board():
    global board
    board[0] = canvas.create_rectangle(570, 370, 630, 430, fill="#222222", tag='cell')
    c = canvas.coords(board[0])
    count = 1
    for k in range(3):
        for i in range((k*4)+2):
            board[count] = canvas.create_rectangle(c[0]+(i+1)*60, c[1], c[2]+(i+1)*60, c[3], fill=color_tile(count), tag='cell')
            nc = canvas.coords(board[count])
            count += 1
        for i in range((k*4)+2):
            board[count] = canvas.create_rectangle(nc[0], nc[1]-(i+1)*60, nc[2], nc[3]-(1+i)*60, fill=color_tile(count), tag='cell')
            c = canvas.coords(board[count])
            count += 1
        for i in range((k*4)+4):
            board[count] = canvas.create_rectangle(c[0]-(i+1)*60, c[1], c[2]-(i+1)*60, c[3], fill=color_tile(count), tag='cell')
            nc = canvas.coords(board[count])
            count += 1
        for i in range((k*4)+4):
            board[count] = canvas.create_rectangle(nc[0], nc[1]+(i+1)*60, nc[2], nc[3]+(1+i)*60, fill=color_tile(count), tag='cell')
            c = canvas.coords(board[count])
            count += 1


def color_tile(tile):
    # FIXME there should be a third dictionary; number:position, number:effect and effect:color
    dictio_board = {1: '#D53B81', 2:'#7D156A', 3:'#DF6422', 4:'#845946', 5:'#1B498A', 6:'#5B528E',
                    7:'#059239',  8:'#B7D14D',  9:'#B7D14D',  10:'#B7D14D',  11:'#006AAC', 12:'#5CAC35',
                    13:'#CD0927', 14:'#009E8D', 15:'#F5BC1C'}
    if tile in dictio_board:
        return dictio_board[tile]


def moveboard(event):
    x = 0
    for i in range(31):
        for element in range(80):
            canvas.move(board[element], x, 0)
            x -= 1
        canvas.after(10)
        canvas.update()


def moveleft(event):
    x = 0
    for i in range(22):
        for element in range(4):
            canvas.move(slide[element], x, 0)
            x -= 1
        canvas.after(10)
        canvas.update()


def moveright(event):
    x = 0
    for i in range(22):
        for element in range(4):
            canvas.move(slide[element], x, 0)
            x += 1
        canvas.after(10)
        canvas.update()


def moveout(event):
    x = 0
    for i in range(30):
        for element in range(4):
            canvas.move(slide[element], x, 0)
            x += 1
        canvas.after(10)
        canvas.update()


def movedown(event):
    x = 0
    for i in range(20):
        canvas.move(slide[0], 0, x)
        canvas.after(10)
        canvas.update()
        x += 1


def moveup(event):
    x = 0
    for i in range(20):
        canvas.move(slide, 0, x)
        canvas.after(10)
        canvas.update()
        x -= 1


slide = ['', '', '', '']


def slide_event(string):
    slide[0] = canvas.create_rectangle(-510,200, -10, 600, fill="#222222", tag='effect')
    slide[1] = canvas.create_text(-490, 245, text=string, justify= LEFT, width='420', font=('Helvetica Neue UltraLight', 20), fill="white", anchor='nw', tag='effect_text')
    slide[2] = canvas.create_text(-490, 500, text='choose A', width='420', font=('Helvetica Neue UltraLight', 20), fill="white", anchor='nw', tag='choice_a')
    slide[3] = canvas.create_text(-215, 500, text='choose B', font=('Helvetica Neue UltraLight', 20), fill="white", anchor='nw', tag='choice_b')



bar = ['', '', '', '', '', '', '']
def right():
    global bar
    bar[0] = canvas.create_rectangle(1200, 0, 1410, 830, fill="#222222")
    bar[1] = canvas.create_text(1370, 790, text="Quit", font=('Helvetica Neue UltraLight',45),fill="white", anchor='se', tag='quit_button')
    bar[2] = canvas.create_text(1370, 690, text="Options", font=('Helvetica Neue UltraLight',45),fill="white", anchor='se', tag='options_button')
    bar[3] = canvas.create_text(1370, 590, text="Roll", font=('Helvetica Neue UltraLight',45),fill="white", anchor='se', tag='options_button')

    bar[4] = canvas.create_text(1370, 90, text="dice: 6", font=('Helvetica Neue UltraLight',45),fill="white", anchor='se', tag='quit_button')
    bar[5] = canvas.create_text(1370, 190, text="Turn: 4", font=('Helvetica Neue UltraLight',45),fill="white", anchor='se', tag='options_button')
    bar[6] = canvas.create_text(1370, 290, text="♡♡♡", font=('Helvetica Neue UltraLight',45),fill="white", anchor='se', tag='options_button')


def object_click(event):
    print ('Got object click', event.x, event.y, event.widget),
    print (event.widget.find_closest(event.x, event.y))


window.bind("<Left>", moveleft)
window.bind("<Right>", moveright)
# window.bind("<Up>", moveup)
# window.bind("<Down>", movedown)
canvas.tag_bind('quit_button', '<Double-1>', quit)
right()
s = 'lorem ipsum dolor sit amet lorem ipsum dolor sit amet lorem ipsum dolor sit amet lorem ipsum dolor sit amet lorem'
slide_event(s)
print_board()
window.bind("<Up>", moveboard)
canvas.tag_bind('choice_b', '<Double-1>', moveout)
canvas.tag_bind('choice_a', '<Double-1>', moveout)


# canvas.tag_raise(fullBottomBar[0])
for element in slide:
    canvas.tag_raise(element)

mainloop()